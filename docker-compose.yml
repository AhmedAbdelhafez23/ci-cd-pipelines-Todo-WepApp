version: '3.8'

services:
  # Spring Boot Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        http_proxy: "http://proxy.th-wildau.de:8080"
        https_proxy: "http://proxy.th-wildau.de:8080"
        no_proxy: "localhost,127.0.0.1,.th-wildau.de"
    ports:
      - "8080:8080"  # Access the application at http://<server-ip>:8080
    environment:
      HTTP_PROXY: "http://proxy.th-wildau.de:8080"
      HTTPS_PROXY: "http://proxy.th-wildau.de:8080"
      NO_PROXY: "localhost,127.0.0.1,.th-wildau.de"
    depends_on:
      - mariadb
    networks:
      - app-network

  # MariaDB Service
  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: todo_app
      MYSQL_USER: todo_user
      MYSQL_PASSWORD: todo_pass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  # phpMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mariadb
      PMA_USER: todo_user
      PMA_PASSWORD: todo_pass
    ports:
      - "8081:80"  # Access at http://<server-ip>:8081
    networks:
      - app-network

  # Loki for Log Aggregation
  loki:
    build:
      context: .
      dockerfile: Dockerfile.loki
    container_name: loki
    ports:
      - "3100:3100"  # Loki API at http://<server-ip>:3100
    # volumes:
    #  - ./loki-config.yaml:/etc/loki/local-config.yml
    networks:
      - app-network

  # Promtail for Log Collection
  promtail:
    build:
      context: .
      dockerfile: Dockerfile.promtail
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki
    networks:
      - app-network


  # Grafana for Log Visualization
  grafana:
    image: grafana/grafana:9.5.3
    container_name: grafana
    ports:
      - "3000:3000"  # Access at http://<server-ip>:3000
    depends_on:
      - loki
    networks:
      - app-network

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
